# Krebs News Issü #3 (2011-??-??)

## -1. Ante Scriptum

Wer noch keinen Krebs hat, kann sich ganz einfach mit [Git][-1.1] ein Klon
von [GitHub][-1.0] holen:

    git clone https://github.com/krebscode/painload krebs

Das so oder ähnlich erzeugte Verzeichnis wird im Folgenden `//` genannt.
Das Ministerium empfiehlt die Verwendung von `/krebs`, aber jeder andere
Ort ist fast genauso gut.

[-1.0]: https://github.com [-1.1]: http://git-scm.com

## Steürung der Lichtverschmutzung

Der Urkrebs steürt schon immer das Licht.  Dazu muss man sich lediglich auf
[`//noise`][0.2]`@krebs.shack` einwählen und die relevanten Kommandos
absetzen.

Eine Einwahl erfolgt z.B. mittels `netcat` wie folgt:

    rlwrap nc krebs.shack telnet rlwrap ncat krebs.shack 23 rlwrap netcat
    krebs.shack 23 telnet krebs.shack

Die relevanten Kommando sehen in etwa so aus:

    /licht SPEC ZUSTAND

dabei ist `ZUSTAND` eine Ganzzahl im Bereich `[0,1]` und die möglichen
Werte von `SPEC` können der vorzüglich belesenen Qülle von
[`//god/licht`][0.1] entnommen oder licht mit dem kommando `help`
aufgerufen werden:

    /licht help

[0.1]: https://github.com/krebscode/painload/tree/master/god/licht 
[0.2]: https://github.com/krebscode/painload/tree/master/noise

## Tinc Retiolum updates
#
Das [`//retiolum][1.1]` Darknet Submodul unter Verwebdung von tinc als
vermaschtes VPN ist ein integraler Bestandteil der Krebs Infrastruktur.
Umso wichtiger ist es, dass die installation überall immer genau das
richtige macht. 

Am 26.08.2011 wurde sich dem Retiolum angenommen um es sauber auf OSX (und
ggf. weiteren Unixartigen OSen) zum laufen zu bringen. Ziel ist es die
Installation auf ein einfaches 

    make -C //retiolum install

zu beschränken.

Die Host-Dateien, welche von tinc verwendet werden koennen mit

    make -C //retiolum update

geupdatet werden. Alle update skripte sind auf das neü Verfahren umgestellt

In diesem Kontext sind unter anderem Skript für das errechnen der richtigen
Tinc-Konfigurationsordners `[1.2]` entstanden. Es wird hierbei die
Architektur des Wirtes gefunden. Eine ähnliche Funktionalität kann nun für
verschiedenste weitere Module welche Plattformunabhängigkeit gewährleisten
sollen verwendet werden.

[1.1]: https://github.com/krebscode/painload/tree/master/retiolum 
[1.2]: https://github.com/krebscode/painload/tree/master/retiolum/bin/get-tinc-dir


## Todesmeldung Urkrebs

Es ist zu vermerken, dass das Gedächnis von Urkrebs zusammen mit der
CF-Disk gestorben ist.  Glücklicher Weise wurde zuvor eine `dd[⌅]`-Kopie
auf die CF-Karte von `Fürkrebs[Ȳ]` (Krebs auf der Brücke/ den
Optionsräumen) erstellt und diese wurde kurzer Hand für die Wiederbelebung
des Urkrebses verwendet. 

Dies hat allerdings auch etwas an ursprünglicher Funktionalität
(`Oncology[2.1]`) zerstoert.  Die gerette Maschine in der Lounge meldet
sich nun offiziell als `Fürkrebs[2.2]` im Retiolum an.

[⌅]: man dd 
[Ȳ]: http://shackspace.de/wiki/doku.php?id=project:krebs#fürkrebs
[2.1]: https://github.com/krebscode/painload/tree/master/oncology 
[2.2]: fuerkrebs.retiolum


## Census auf Urkrebs

Census[Ƀ] ist ein Projekt in painload welches dem lokal ansässigen Krebs
die Möglichkeit bietet noch gezielter Leute im shack zu beleidigen. Primär
geht es darum, dass Krebs die Teilnehmer seines lokalen Netzwerkes
identifiziert und loggt.  Benutzung:

    //census/arping_users.py

Census kann fuer maximale informationgewinnung in entsprechend gewählten
Abständen mittels `cron[4.1]` geplant werden. 

Um den Eintrag so leicht wie Möglich Löschen oder Updaten zu können wird
das //krebs/utils Werkzeug `magic[4.2]` verwendet.  Alle weiteren
Informationen koennen aus dem Quelltext von Census entnommen werden.
Census wurde am 2011-11-01 auf Urkrebs in den erweiterten Probebetrieb
aufgenommen.

[Ƀ]: https://github.com/krebscode/painload/tree/master/census 
[4.1]: man cron
[4.2]: https://github.com/krebscode/painload/tree/master/utils/bin/magic

## magic

Magic bietet das Feature gesondert Zeilen in Konfigurationsdateien neu
einzutragen und diesen Block gesondert zu verwalten. Mehrere magic bloecke
in einer Datei sind möglich.  Verwendung:

    echo "/usr/bin/lcd4linux" | magic create lcd4linux /etc/rc.local

Folgende Zeilen werden in der angegebenen Datei erzeugt:

    $ tail -n 3 /etc/rc.local
    # begin krebs magic <lcd4linux>
    /usr/bin/lcd4linux
    # end krebs magic <lcd4linux>

Magic bietet ungeahnte Möglichkeiten Konfigurationsdateien zu Verkrebsen
ohne auf das Aufräumen verzichten zu müssen. Für weitere Hilfe bietet das
Tool eine Hilfefunktion:
    
    //util/bin/magic help


## Oncology auf dem (neuen) Urkrebs

Nachdem Gedächnistausch von Fürkrebs und Urkrebs hat es ja wie beschrieben
die Funktionalität Oncology (Statusbildschirm an USB) dahingerafft. Am
2011-11-07 wurde diese wieder in den Funktionalbetrieb aufgenommen. 


## Krebs Darknet Retiolum Prefix(KD;RP) Graphen-Map in Version 23

Der Graphengenerator für `KD;RP[ɐ]` ist überarbeitet worden und bietet
seit dem 2011-10-23 die Möglichkeit Statistiken zu dem Netzwerk und
einzelnen Nodes auszugeben. Hervorzuheben ist hierbei die Funktionalität
die Availability von Nodes zu beschreiben, also wie wahrscheinlich es ist
einen Knoten X zu einem Zeitpunkt Y im Darknet anzutreffen. Zusätzlich
wurde die Stats-Generator engine überarbeitet und läuft nun besonders bei
grossen /var/log/syslog files schneller[⠣].

[ɐ]: https://github.com/krebscode/painload/tree/master/retiolum/scripts/adv_graphgen
[⠣]: https://github.com/krebscode/painload/commit/822c43a763aa61c1accce3768090d066048faaff 

## Ticket-Fetcher für den 28C2

Da die 28C3 Presales Tickets rar sind und Leute anfangen das Einkaufen zu
automatisieren kann nicht auf das Glück des Tüchtigen gehofft werden,
sondern auch für den shack wird automatisiert. Herausgekommen ist ein
Skript[Բ] (basierend auf einem anderen Skript[в] welches aber zu hart
gesuckt hat) welches sich auf der Presales Seite einloggt und dort den
"Confirm Order" Button drückt. Das Ganze wird in eine ELoop gepackt und den
Tickets steht nun nichts mehr im Wege. Gebaut wurde das Skript in der nacht
am 14.November (T-10H) bis zur nächsten Presales Runde für den 28C3. 

UPDATE 14.11.2011 16:30: Die Tickets sind bestellt, das Ziel ist erreicht.
Allerdings nicht von einem der deployten Skripten gefetcht, sondern durch
die manülle Klick-Kraft[1]. Für das nächste Jahr muss das skript also noch
viel aggressiver fetchen und die bandbreite mit HTTP reqüsts füllen.

[в] http://pastebin.com/SRwtNwKS 
[1] http://f.cl.ly/items/213N2l0c1p3d24332l0X/ragecomic.png 
[Բ] https://github.com/krebscode/painload/blob/master/too_old/mechanize_tickets.py
[ɐ] http://euer.krebsco.de/graphs/retiolum/retiolum_1.svg

## Das Krebs Asset Web

Als zweitältestes Projekt und Untergruppierung des Shacks hat Krebs einiges
an physikalischen Assets angesammelt. Diese werden von den KMs bzw. Krebs
selbst verwaltet. Ziel des Krebs Asset Webs ist es die vorhandenen Assets
zu dokumentieren und Metadaten über Besitzer, Ort oder Anzahl aufzunehmen.
Dafür wurden im ersten Schritt Usecases definiert und
`niedergeschrieben[չ]`. 

Daraus entstanden ist `ass[ɤ]`, ein minimalistisches Asset-Management Tool.
Als persistentes Backend wird eine Append-Only Datei verwendet, Einträge
werden atomar in ein Git-Repository committed.  `truth2json[Ճ]` erzeugt aus
dem aktuellen Datenbestand des asset-web eine JSON Datenstruktur. Diese
kann dann für weitergehende Informationsgewinnung verwendet werden.  Die
README[吳] Datei erklärt die Verwendung der implementierten Tools, sowie
die dahinter stehenden Konzepte.


[չ] https://github.com/krebscode/painload/blob/master/cholerab/assets/usecases.txt
[ɤ] https://github.com/krebscode/painload/blob/master/assets/bin/ass 
[Ճ] https://github.com/krebscode/painload/blob/master/assets/bin/truth2json
[吳] https://github.com/krebscode/painload/blob/master/assets/README

EOF
